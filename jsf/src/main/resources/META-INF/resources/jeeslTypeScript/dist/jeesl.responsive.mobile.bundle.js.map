{"version":3,"file":"jeesl.responsive.mobile.bundle.js","mappings":";;;;;;AAAA;;;GAGG;AACH,MAAM,CAAC,mBAAmB,GAAG;IACzB,IAAI,QAAQ,GAAW,EAAE,GAAG,2BAA2B,EAAE,CAAC;IAC1D;;;;;;;;;;;;;;;;MAgBE;IACF,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACrC,CAAC","sources":["webpack://jeesl/./src/jeesl.responsive.mobile.ts"],"sourcesContent":["/**\r\n * In order to set the correct style element for mobile devices, we need to overwrite the\r\n * calculateMenuHeight method to exclude the media query.\r\n */\r\nwindow.calculateMenuHeight = function() {\r\n    let cssRules: string = '' + cssRulesMenuHeightCalculate();\r\n    /*\r\n    $('.jeesl-dropdown-list').each((index: number, element: HTMLElement) => {\r\n        // Check if element is undefined and the element has children with the class jeesl-dropdown-item\r\n        if($(element) !== undefined && $(element).children('.jeesl-dropdown-item')!== undefined) {\r\n            cssRules += '#' +\r\n            $(element).attr('id') +\r\n            '.jeesl-active { height: ' +\r\n                    $(element).children('.jeesl-dropdown-item')\r\n                       .toArray()\r\n                       .map((child: HTMLElement) => $(child).outerHeight())\r\n                       .filter((value: number | undefined): value is number => value !== undefined)\r\n                       .reduce((previousValue: number, currentValue: number, currentIndex: number, array: number[]) => previousValue + currentValue, 0)\r\n                    + 15 + (Number(!$(element).hasClass('jeesl-dropdown-list-multi')) * 15)\r\n                    + 'px; }';\r\n        }\r\n    });\r\n    */\r\n    menuHeightStyle.append(cssRules);\r\n}"],"names":[],"sourceRoot":""}