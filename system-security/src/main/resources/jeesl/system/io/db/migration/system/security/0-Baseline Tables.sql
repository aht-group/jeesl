create sequence SecurityUser_id_seq start 1 increment 1;
create table SecurityAction (id  bigserial not null, code varchar(255), documentation boolean, position int4 not null, visible boolean not null, template_id int8, view_id int8, primary key (id));
create table SecurityActionJtDescription (action_id int8 not null, description_id int8 not null, primary key (action_id, description_id));
create table SecurityActionJtLang (action_id int8 not null, lang_id int8 not null, primary key (action_id, lang_id));
create table SecurityArea (id  bigserial not null, code varchar(255), position int4 not null, restricted boolean not null, visible boolean, view_id int8, primary key (id));
create table SecurityAreaJtDescription (area_id int8 not null, description_id int8 not null, primary key (area_id, description_id));
create table SecurityAreaJtLang (area_id int8 not null, lang_id int8 not null, primary key (area_id, lang_id));
create table SecurityCategory (id  bigserial not null, code varchar(255), documentation boolean, position int4 not null, type varchar(255), visible boolean not null, primary key (id));
create table SecurityCategoryJtDescription (category_id int8 not null, description_id int8 not null, primary key (category_id, description_id));
create table SecurityCategoryJtLang (category_id int8 not null, lang_id int8 not null, primary key (category_id, lang_id));
create table SecurityContext (id  bigserial not null, code varchar(255), contextId int8, emailAddress varchar(255), emailName varchar(255), linkImpressum varchar(255), mfaLabel varchar(255), pageBackground varchar(255), pageCss varchar(255), pageFavIcon varchar(255), pageHeadline varchar(255), pageLogo varchar(255), pagePrefix varchar(255), pageTitle varchar(255), position int4 not null, serverName varchar(255), primary key (id));
create table SecurityContextJtDescription (context_id int8 not null, description_id int8 not null, primary key (context_id, description_id));
create table SecurityContextJtLang (context_id int8 not null, lang_id int8 not null, primary key (context_id, lang_id));
create table SecurityHelp (id  bigserial not null, position int4 not null, visible boolean not null, document_id int8, section_id int8, view_id int8, primary key (id));
create table SecurityMenu (id  bigserial not null, position int4 not null, visible boolean, context_id int8, parent_id int8, view_id int8, primary key (id));
create table SecurityMenuJtLang (menu_id int8 not null, lang_id int8 not null, primary key (menu_id, lang_id));
create table SecurityMfa (id  bigserial not null, json text, name varchar(255), position int4 not null, record timestamp, visible boolean not null, type_id int8, user_id int8, primary key (id));
create table SecurityRole (id  bigserial not null, code varchar(255), documentation boolean, position int4 not null, visible boolean not null, category_id int8, primary key (id));
create table SecurityRoleJtAction (action_id int8 not null, role_id int8 not null);
create table SecurityRoleJtDescription (role_id int8 not null, description_id int8 not null, primary key (role_id, description_id));
create table SecurityRoleJtLang (role_id int8 not null, lang_id int8 not null, primary key (role_id, lang_id));
create table SecurityRoleJtUsecase (usecase_id int8 not null, role_id int8 not null);
create table SecurityRoleJtView (view_id int8 not null, role_id int8 not null);
create table SecurityTemplate (id  bigserial not null, code varchar(255), documentation boolean not null, position int4 not null, visible boolean not null, category_id int8, primary key (id));
create table SecurityTemplateJtDescription (template_id int8 not null, description_id int8 not null, primary key (template_id, description_id));
create table SecurityTemplateJtLang (template_id int8 not null, lang_id int8 not null, primary key (template_id, lang_id));
create table SecurityUsecase (id  bigserial not null, code varchar(255), documentation boolean, position int4 not null, visible boolean not null, category_id int8, primary key (id));
create table SecurityUsecaseJtAction (action_id int8 not null, usecase_id int8 not null);
create table SecurityUsecaseJtDescription (usecase_id int8 not null, description_id int8 not null, primary key (usecase_id, description_id));
create table SecurityUsecaseJtLang (usecase_id int8 not null, lang_id int8 not null, primary key (usecase_id, lang_id));
create table SecurityUsecaseJtView (view_id int8 not null, usecase_id int8 not null);
create table SecurityUser (system varchar(32) not null, id int8 not null, email varchar(255), firstName varchar(255), lastName varchar(255), permitLogin boolean, pwd varchar(255), salt varchar(255), primary key (id));
create table SecurityView (id  bigserial not null, accessLogin boolean, accessPublic boolean, code varchar(255), documentation boolean, maintenance boolean, packageName varchar(255), position int4 not null, redirect boolean, urlBase varchar(255), urlMapping varchar(255), viewPattern varchar(255), visible boolean not null, category_id int8, primary key (id));
create table SecurityViewJtDescription (view_id int8 not null, description_id int8 not null, primary key (view_id, description_id));
create table SecurityViewJtLang (view_id int8 not null, lang_id int8 not null, primary key (view_id, lang_id));