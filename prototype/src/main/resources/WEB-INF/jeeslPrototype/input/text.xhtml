<ui:composition xmlns="http://www.w3.org/1999/xhtml"
				xmlns:h="http://java.sun.com/jsf/html"
				xmlns:ui="http://java.sun.com/jsf/facelets"
				xmlns:c="http://java.sun.com/jsp/jstl/core"
				xmlns:f="http://java.sun.com/jsf/core"
				xmlns:p="http://primefaces.org/ui"
				xmlns:o="http://omnifaces.org/ui"
				xmlns:jtp="http://jsf.jeesl.org/prototype/tag">
				
	<c:set var="rendered"  value="#{not empty rendered ? rendered : true}" />
	<c:set var="required"  value="#{not empty required ? required : false}" />
	<c:set var="maxlength" value="#{not empty maxlength ? maxlength : 255}" />
	
	<c:set var="loc" value="#{not empty loc ? loc : localeCode}"/>
	<c:set var="defaultValue" value="#{entity}:#{code}"/>
	
	<c:set var="handler" value="#{handler}"/>
	
	<h:panelGroup styleClass="jeesl-input-container">
		<p:inputText rendered="#{rendered and (empty entity or empty code)}"
					 rows="#{rows}"
					 value="#{value}"
					 autocomplete="off"
					 required="#{required}">
			<ui:remove><c:if test="#{not empty id}">
				<!-- Throws illegal argument exception if id is not empty, because f:attribute is not allowed for id.
					 Setting the id merely as id="#{id}" throws exception if id is empty, because empty ids are not allowed.
					 Found no way of setting the generated id as default (like cc.clientId) value to mitigate the latter
					 problem. Why do we use composition instead of composite component? 
					 
					 This post https://stackoverflow.com/questions/11473983/jsf-conditionally-set-id describes the same issue
					 but offers no solution beside using Omnifaces <o:tagAttribute>, but does not explain how. Instead of
					 f:attribute it does nothing, above the c:set values the issue remains the same: exception on empty id. -->
		        <f:attribute name="id" value="#{id}" />
		    </c:if></ui:remove>
		</p:inputText>
		
		<h:panelGroup rendered="#{rendered and ((not empty entity) or (not empty code))}" styleClass="ui-float-label">
			<p:inputText value="#{value}" />
			<p:outputLabel for="@previous"
						   value="#{empty code
										? (not empty appLabelBean.entities[entity][loc].lang ? appLabelBean.labels[entity][loc].lang : defaultValue)
										: (not empty appLabelBean.labels[entity][code][loc].lang ? appLabelBean.labels[entity][code][loc].lang : defaultValue)}"/>
		</h:panelGroup>
		
		<p:commandLink action="#{handler.selectNext}" update="#{update}" rendered="#{not empty handler}" styleClass="ui-button ui-state-default ui-corner-all">
			<jtp:symbolizer value="#{handler.selection}"
							styleClass="jeesl-input-grid-icon jeesl-input-grid-locale-icon"/>
		</p:commandLink>
	</h:panelGroup>
</ui:composition>